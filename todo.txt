The list of things that need to be done still, broken down in to
groups and sorted relatively in the order that they should be done in.

This list is being broken down in to several sections. It may require
items to be completed in more then one section for soem actual
functionality to be finished.

The reason for this was I needed to really track and decide what is
going to be on any given _web page_ and _form_ as well as what the
backend view and backend model need to accomplish.

closed:
  only the owner or moderator of the discussion can make changes to the
       discussion

locked:
  only moderators may make changes to the discussion

o post to discussions
  * permission to post
  * template
  * quoting
  * markup

o tag/usertag
  * add tags on posts, discussions, forums, fcs
  * display tags and user tags on posts, discussions, forums, fcs
  * remove tags and user tags on posts, discussions, forums, fcs
  o add tag page (displays all objects that are tagged with that tag)
  o tag cloud - highlights successively more common tags?

o user account/profile page
  o displays list of toons
  o collapsed toon/item view
  o subscribed discussions with unread posts in them (linking to the
    first unread post)

* edit posts
* create discussions
* edit discussions
* create forums
* edit forums
* create forum collections
* edit forum collections
o list posts with filters & attributes
o search discussions, forums, forum collections for an expression in
  their title or blurb.
o search discussions, forums, forum collections, posts for an author
  matching an expression.
* make it so that bbcode & smilies in a post get translated properly
* permissions on posts
  o delete (not really delete)
  o modify
o poll
  o read
  o create
  o modify
  o view results
* permissions on discussions
  * read
  * create
  * modify
  * delete
  * view (listing)
  * post (also allows you to make a poll)
  o make sticky (moderate)
o permissions on forums
  * read
  * modify
  * create
  * delete
  * view (listing)
    The following sql statement seems to be the one we need to find
    forums for which you have 'view' permission:

    select asforums_forum.id, asforums_forum.name from asforums_forum, auth_rowlevelpermission where auth_rowlevelpermission.model_ct_id=31 and auth_rowlevelpermission.model_id=asforums_forum.id and auth_rowlevelpermission.permission_id = 104 and auth_rowlevelpermission.negative='f' and ((auth_rowlevelpermission.owner_ct_id=1 and auth_rowlevelpermission.owner_id=2) or (auth_rowlevelpermission.owner_ct_id=3 and auth_rowlevelpermission.owner_id in (1,3)));

    NOTE: '31' is the content type id for forums, determined via:
          ctype = ContentType.objects.get_for_model(f) (where 'f' is a
          forum instance)

          '104' is the id from the auth permission table that
          corresponds to the 'view' permission for forums.

          '1' is the id of the user we are checking the permissions
          for.

          '2' is the content type id for users.

          content type for groups is 3, The user is in groups 1 & 3.

    This bascailly says if the user or a group he is in has the 'view
    forum' permission and it is not negative, then select that forum.

    (To extend this to dynamically check forum collections is not hard
    but may start to tax the db.)

    something like this? Forum.objects.extra(tables=["auth_rowlevelpermission"], where=["auth_rowlevelpermission.model_ct_id=31", "auth_rowlevelpermission.model_id=asforums_forum.id", "auth_rowlevelpermission.permission_id = 104", "auth_rowlevelpermission.negative='f'","((auth_rowlevelpermission.owner_ct_id=1 and auth_rowlevelpermission.owner_id=2) or (auth_rowlevelpermission.owner_ct_id=3 and auth_rowlevelpermission.owner_id in (1,3)))"])

  * discuss
  * post
* permissions on forum collections
  * read
  * modify
  * create
  * view
  * post
  * discuss

o last seen
  o all discussion views need to show the user the last seen (by them)
    post
  o all views that have lists of discussions need to take an option
    "only show if this discussion has new posts since the last time I
    have been here."
  o have a toggle that sets whether discussions are filtered this way?
  o need to write a custom paginator that lets us update the 'last
    seen' flag for any listing of posts

o calendaring/scheduling
  o events
    o create
    o modify
    o delete
    o view
    o signup
  o list (with filters & sorting)

o applications
  o create an application
  o modify an application
  o close an application
  o see list of applicants
  o select an application

o account profiles
  o time zone
  o forums results per page
  o associated toons

o wiki
  o wiki topic filter (to automatically wiki-ize content
  o create topic
  o edit topic
  o rename topic (... not sure we can make this work
  o delete topic (not really delete)
  o back rev topic

o item db
  o filter so that item links will work

o toons
  o permissions
    o read
    o modify
  o all the basic data gathered by characterprofilers
    o items
o gallery
  o need gallery filter (like wiki for easy linking of pictures)

